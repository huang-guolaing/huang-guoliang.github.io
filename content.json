{"meta":{"title":"小黄笔记本","subtitle":"xh-notes","description":"","author":"Huang Guoliang","url":"https://huang-guoliang.github.io","root":"/"},"pages":[{"title":"About","date":"2022-01-15T07:48:36.925Z","updated":"2022-01-15T07:48:36.925Z","comments":true,"path":"about/index.html","permalink":"https://huang-guoliang.github.io/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2022-01-15T07:48:36.925Z","updated":"2022-01-15T07:48:36.925Z","comments":true,"path":"categories/index.html","permalink":"https://huang-guoliang.github.io/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2022-01-17T05:40:30.705Z","updated":"2022-01-17T05:40:30.705Z","comments":true,"path":"tags/index.html","permalink":"https://huang-guoliang.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"分子的机器学习描述符","slug":"Cheminformatics/mldscpts4m","date":"2022-01-19T00:49:44.000Z","updated":"2022-01-19T09:29:08.435Z","comments":true,"path":"posts/68090c70/","link":"","permalink":"https://huang-guoliang.github.io/posts/68090c70/","excerpt":"","text":"文章链接：Machine learning descriptors for molecules 适用于机器学习的描述符有哪些特点？ 描述符有哪些类型？ 如何选择描述符(组合)？ 总结 参考资料 在预测分子性质时，分子结构在被用来训练机器学习模型之前被转换成描述符(descriptors)。 本文的目的是概述分子描述符，并讨论三个主要问题: 适用于机器学习的描述符有哪些特点？选用一个满足以下三个标准的描述符来编码你的分子： 描述符应与将要预测的分子性质有较高的相关性； 对应不同的分子结构，描述符应有有所差异； 根据分子大小选用合适的描述符(不是所有的描述符都适合所有大小的分子)。 针对具体的机器学习任务，描述符还需要遵循其他一些标准，例如： 能区分同分异构体； 可解码(从描述符返回到分子结构)； 数据量与描述符的维度(通常，数据集中的分子数量应远大于描述符的维数)。 描述符有哪些类型？分子描述符分为两类：实验性的描述符和理论性的描述符。 实验性的描述符(Experimental)实验测量或理论计算得到的物理化学性质。 理论性的描述符(Theoretical)来自于分子的符号表示。根据”维度“又可分为以下五类: 0维(0D)描述符不提供任何有关分子结构或原子连通性信息的分子描述符。例如，原子数、键数或分子量都是0D描述符。它们的优点是很容易获得，但要与其他描述符组合使用； 1维(1D)描述符由一组子结构(如官能团)计算得到的描述符。其优点也是容易获得。其中，分子指纹就是一类最常见的1D描述符。 2维(2D)描述符通过分子的图表示(graph representation)获得分子拓扑信息的描述符。典型的2D描述符是邻接矩阵(Adjacency matrix)，库仑矩阵(Coulomb matrix)和距离矩阵(Distance matrix)。由于2D描述符对分子的结构特征(大小、形状和对称性)很敏感，因此它们是常用的一类描述符。 3维(3D)描述符提供有关分子原子空间坐标信息的几何描述符。最著名的3D描述符是分子矩阵(Molecular matrix)和3D-MoRSE描述符。在分子矩阵的情况下，这类描述符提供了大量关于分子的信息，并且具有区分异构分子的优势。然而，由于几何描述符的复杂性，其计算十分耗时。 4维(4D)描述符：也被称为“基于网格的描述符”。这类描述符除了分子几何外，还引入了第四维空间。这个新维度通常表征分子与受体活性位点之间的相互作用或分子的多重构象状态。常用的4D描述符有CoMFA和GRID。4D描述符的一个优点是，它们提供了比其他描述符更多的信息，并且总是能够为结构不同的分子生成不同的值。然而，就像3D描述符一样，4D描述符因其高复杂性而难以获取。 如何选择描述符(组合)？ 从海量描述符中选择合适的描述符(组合)是一项非常困难的任务。 主要有两种选择策略：穷举搜索和优化算法。 穷举搜索(Exhaustive search)也就是全子集模型(All Subset Model, ASM)。N个描述符就有N2-1种组合。此策略理论上能找到最优的描述符组合，但描述符数量过大时极为消耗算力，比较适合只考虑少量描述符的情况。 优化算法(Optimization algorithms)是通过迭代方法找出能使预测模型结果最优的描述符组合。比较常用的算法有进化规划(evolutionary programming，EP)，蚁群优化(ant colony optimization，ACO)，顺序查找(sequential search，SS)和遗传算法(genetic algorithms，GAs)。一般的优化流程如下图所示： 总结 分子用描述符表示后，可作为机器学习模型的特征输入。 描述符的选择很重要，因为它对模型的预测性能有很大的影响。 在选择描述符时，有四个关注点： 描述符与预测性质之间的相关性 描述符为结构不同的分子生成不同值的能力 描述符的维数 可用的数据量 描述符不能完全描述分子的结构复杂性，可通过使用高维描述符或多个描述符部分地解决。 使用高维描述符或描述符组合会增加模型的复杂度而降低算法的性能。 参考资料 st=>start: 开始优化 op1=>operation: 候选的描述符集合 op2=>operation: 描述符子集 cond=>condition: 预测模型评估 e=>end: 最优的描述符子集 st->op1->op2(right)->cond cond(no)->op1 cond(yes)->e{\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-0-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-0-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-0\", options);1.DScribe: Library of descriptors for machine learning in materials science ↩2.Molecular descriptors for structure–activity applications: a hands-on approach ↩","categories":[{"name":"Cheminformatics","slug":"Cheminformatics","permalink":"https://huang-guoliang.github.io/categories/Cheminformatics/"}],"tags":[]},{"title":"seaborn 绘图函数概述","slug":"Tools/seaborn/seaborn-tutorial-01","date":"2022-01-18T07:26:43.000Z","updated":"2022-01-18T08:52:19.272Z","comments":true,"path":"posts/bc466d5/","link":"","permalink":"https://huang-guoliang.github.io/posts/bc466d5/","excerpt":"","text":"","categories":[{"name":"Tools","slug":"Tools","permalink":"https://huang-guoliang.github.io/categories/Tools/"},{"name":"seaborn","slug":"Tools/seaborn","permalink":"https://huang-guoliang.github.io/categories/Tools/seaborn/"}],"tags":[]},{"title":"《深度学习在分子与材料中的应用》导览","slug":"Cheminformatics/dl4mm/dl4mm-00","date":"2022-01-18T06:19:04.000Z","updated":"2022-01-19T00:55:57.579Z","comments":true,"path":"posts/f25b25e8/","link":"","permalink":"https://huang-guoliang.github.io/posts/f25b25e8/","excerpt":"","text":"","categories":[{"name":"Cheminformatics","slug":"Cheminformatics","permalink":"https://huang-guoliang.github.io/categories/Cheminformatics/"},{"name":"dl4mm","slug":"Cheminformatics/dl4mm","permalink":"https://huang-guoliang.github.io/categories/Cheminformatics/dl4mm/"}],"tags":[]},{"title":"seaborn 教程导览","slug":"Tools/seaborn/seaborn-tutorial-00","date":"2022-01-18T02:21:56.000Z","updated":"2022-01-19T09:32:48.218Z","comments":true,"path":"posts/a1871603/","link":"","permalink":"https://huang-guoliang.github.io/posts/a1871603/","excerpt":"","text":"教程目录 安装 seaborn 初试 seaborn Seaborn 是一个用 Python 制作统计图形的库。它构建在 matplotlib 之上，并与 pandas 数据结构紧密集成。它为绘制出吸引注意且信息丰富的统计图形提供了高级接口。 教程目录 API overview Overview of seaborn plotting functions Data structures accepted by seaborn Plotting functions Visualizing statistical relationships Visualizing distributions of data Plotting with categorical data Visualizing regression models Multi-plot grids Building structured multi-plot grids Plot aesthetics Controlling figure aesthetics Choosing color palettes 安装 seaborn通过 PyPI 或 Anaconda 直接安装： 1234# pip安装pip install seaborn# 或conda安装conda install seaborn 初试 seaborn1234567891011121314151617# 导入seaborn库import seaborn as sns# seaborn自带的示例数据集，# 是pandas的DataFrame格式的df = sns.load_dataset(&quot;penguins&quot;)# 如果在 Jupyter Notebook 上运行，# 可以直接显示出图片plot = sns.pairplot(data=df, hue=&quot;species&quot;)# 保存图片plot.figure.savefig(&quot;out.png&quot;)# 在非 Jupyter Notebook 环境中# 在窗口中显示图片需要 matplotlib 的帮助import matplotlib.pyplot as pltplt.show() 轻松绘制出漂亮的图表：","categories":[{"name":"Tools","slug":"Tools","permalink":"https://huang-guoliang.github.io/categories/Tools/"},{"name":"seaborn","slug":"Tools/seaborn","permalink":"https://huang-guoliang.github.io/categories/Tools/seaborn/"}],"tags":[{"name":"seaborn","slug":"seaborn","permalink":"https://huang-guoliang.github.io/tags/seaborn/"}]},{"title":"《赤裸的统计学》第2章","slug":"Mathematics/Statistics/naked-stats/naked-stats-02","date":"2022-01-17T06:14:39.000Z","updated":"2022-01-19T00:55:26.152Z","comments":true,"path":"posts/dac470bb/","link":"","permalink":"https://huang-guoliang.github.io/posts/dac470bb/","excerpt":"","text":"CHAPTER 2. Descriptive Statistics: Who was the best baseball player of all time? 要点： 平均数容易受到远离[中心区域的“异常值”的干扰而出现失真。 标准差用于衡量数据相对于平均值的分散程度。 .article-entry table { width: 50%; } table th { width: 30px; } 0 1 2 3 4 5 6 7 8 9 &gt;10 competitor 12 14 36 13 8 6 5 3 0 2 1 your 25 31 9 4 3 0 0 1 1 0 26 123456import numpy as npcompet = [12, 14, 36, 13, 8, 6, 5, 3, 0, 2, 1]your = [25, 31, 9, 4, 3, 0, 0, 1, 1, 0, 26]","categories":[{"name":"Mathematics","slug":"Mathematics","permalink":"https://huang-guoliang.github.io/categories/Mathematics/"},{"name":"Statistics","slug":"Mathematics/Statistics","permalink":"https://huang-guoliang.github.io/categories/Mathematics/Statistics/"},{"name":"naked-stats","slug":"Mathematics/Statistics/naked-stats","permalink":"https://huang-guoliang.github.io/categories/Mathematics/Statistics/naked-stats/"}],"tags":[{"name":"Stats","slug":"Stats","permalink":"https://huang-guoliang.github.io/tags/Stats/"}]},{"title":"《赤裸的统计学》第1章","slug":"Mathematics/Statistics/naked-stats/naked-stats-01","date":"2022-01-17T02:52:26.000Z","updated":"2022-01-19T00:55:12.816Z","comments":true,"path":"posts/e1f2a54d/","link":"","permalink":"https://huang-guoliang.github.io/posts/e1f2a54d/","excerpt":"","text":"","categories":[{"name":"Mathematics","slug":"Mathematics","permalink":"https://huang-guoliang.github.io/categories/Mathematics/"},{"name":"Statistics","slug":"Mathematics/Statistics","permalink":"https://huang-guoliang.github.io/categories/Mathematics/Statistics/"},{"name":"naked-stats","slug":"Mathematics/Statistics/naked-stats","permalink":"https://huang-guoliang.github.io/categories/Mathematics/Statistics/naked-stats/"}],"tags":[{"name":"Stats","slug":"Stats","permalink":"https://huang-guoliang.github.io/tags/Stats/"}]},{"title":"《赤裸的统计学》目录","slug":"Mathematics/Statistics/naked-stats/naked-stats-00","date":"2022-01-17T02:42:23.000Z","updated":"2022-01-19T00:54:59.563Z","comments":true,"path":"posts/54daf226/","link":"","permalink":"https://huang-guoliang.github.io/posts/54daf226/","excerpt":"","text":"英文原版：Naked Statistics中文译版：赤裸的统计学 Introduction: Why I hated calculus but love statistics Chapter 01. What’s the Point? Chapter 02. Descriptive Statistics Chapter 03. Deceptive Description Chapter 04. Correlation Chapter 05. Basic Probability Chapter 05½. The Monty Hall Problem Chapter 06. Probems with Probaility Chapter 07. The Importance of Data Chapter 08. The Central Limit Theorm Chapter 09. Inference Chapter 10. Polling Chapter 11. Regression Analysis Chapter 12. Common Regression Mistakes Chapter 13. Program Evaluations","categories":[{"name":"Mathematics","slug":"Mathematics","permalink":"https://huang-guoliang.github.io/categories/Mathematics/"},{"name":"Statistics","slug":"Mathematics/Statistics","permalink":"https://huang-guoliang.github.io/categories/Mathematics/Statistics/"},{"name":"naked-stats","slug":"Mathematics/Statistics/naked-stats","permalink":"https://huang-guoliang.github.io/categories/Mathematics/Statistics/naked-stats/"}],"tags":[{"name":"Stats","slug":"Stats","permalink":"https://huang-guoliang.github.io/tags/Stats/"}]},{"title":"——欢迎光临我的博客——","slug":"index","date":"2022-01-15T08:18:40.000Z","updated":"2022-01-19T09:23:28.037Z","comments":true,"path":"posts/55bc8bfb/","link":"","permalink":"https://huang-guoliang.github.io/posts/55bc8bfb/","excerpt":"","text":"我是 老黄 小黄，一名本硕 光学专业 在 化工行业 打滚的 IT 工程师。现在主攻 机器学习 和 化学信息学。给我发信息：xh-notes@foxmail.com 课程： Dive into Deep Learning [课程地址] [视频地址] [我的笔记] 教程： Seaborn Tutorial [我的笔记] 书单： Deep Learning for Molecules and Materials; Andrew D. White; 2021. [在线阅读] [我的笔记] Deep Learning from Scratch; Seth Weidman; O’Reilly Media, Inc.; 2019. [我的笔记] Naked Statistics; Charles Wheelan; W. W. Norton &amp; Company, Inc.; 2013. [我的笔记] 文章： Machine learning descriptors for molecules; chemintelligence.com; 2021. [我的笔记]","categories":[],"tags":[]}],"categories":[{"name":"Cheminformatics","slug":"Cheminformatics","permalink":"https://huang-guoliang.github.io/categories/Cheminformatics/"},{"name":"Tools","slug":"Tools","permalink":"https://huang-guoliang.github.io/categories/Tools/"},{"name":"seaborn","slug":"Tools/seaborn","permalink":"https://huang-guoliang.github.io/categories/Tools/seaborn/"},{"name":"dl4mm","slug":"Cheminformatics/dl4mm","permalink":"https://huang-guoliang.github.io/categories/Cheminformatics/dl4mm/"},{"name":"Mathematics","slug":"Mathematics","permalink":"https://huang-guoliang.github.io/categories/Mathematics/"},{"name":"Statistics","slug":"Mathematics/Statistics","permalink":"https://huang-guoliang.github.io/categories/Mathematics/Statistics/"},{"name":"naked-stats","slug":"Mathematics/Statistics/naked-stats","permalink":"https://huang-guoliang.github.io/categories/Mathematics/Statistics/naked-stats/"}],"tags":[{"name":"seaborn","slug":"seaborn","permalink":"https://huang-guoliang.github.io/tags/seaborn/"},{"name":"Stats","slug":"Stats","permalink":"https://huang-guoliang.github.io/tags/Stats/"}]}